making of lamda expression 

(int a, int b) ->{
    System.out.println(a+b);
}

this is basically lamda expression 

Interface interf1 extends interf -


adding two numbers through lamda expression 

Interf i = (int a, int b)->System.out.println(a+b); ---this is the way of adding two numbers through interface 

//this is the way of adding two numbers through interface 


i.m1(5,3); 



question like the number given by the user is odd or even..we need to check and tell it 


intPredict Even = n -> (n & 1)==0


Interf j = (c) -> System.out.println(c % 2 == 0);
j.m1(10) ----- it will return true false on basis of number is even or odd ---- LAMDA FUNCTION 





----------------PREDICATE--------------

it returns value in boolean 

Predicate<Integer> j = (c)->(c % 2 ==0);
//predicate has bydefault method called test method 

System.out.println(j.test(9)) -- it will check 9 % 2 == 0 and it will return true or false on the basis 

//test is the default method in predicate 


FOR ONLY TRUE FALSE..PREDICATE IS USED ...


for every thread there is os and whatever is in os..it will get stored to cache 
so for that we make it volatile 


function <String, Integer> p = (s)->s.length();
p.apply("Abcd");